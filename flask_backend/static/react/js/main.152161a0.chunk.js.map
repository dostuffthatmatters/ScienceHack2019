{"version":3,"sources":["App/backendCommunication.jsx","App/Components/Forms/CustomSelect.jsx","App/SelectPage/SelectPage.jsx","App/MapPage/Map.jsx","secrets.js","App/MapPage/MapPage.jsx","App/App.jsx","App/Wrapper.jsx","serviceWorker.js","index.js"],"names":["BACKEND_URL","CustomSelect","props","React","useState","value","setValue","FormControl","className","InputLabel","id","label","Select","labelId","onChange","event","target","parseInt","Object","keys","selectOptions","map","MenuItem","SelectPage","yearSelectOptions","classes","this","monthSelectOptions","months","dataset","selection","odiacYears","edgarYears","Container","maxWidth","container","Card","card","elevation","CardContent","Typography","variant","headline","Grid","root","spacing","justify","item","xs","gridItem","selectDataset","selectTime","fromMonth","toMonth","fromYear","toYear","wrapper","Button","color","fetching","onClick","onFetch","button","CircularProgress","size","buttonProgress","Component","withStyles","theme","display","textAlign","marginBottom","alignItems","justifyContent","minWidth","marginLeft","marginRight","fontWeight","position","top","left","marginTop","initialViewState","longitude","latitude","zoom","pitch","bearing","Map","layers","HexagonLayer","data","pickable","extruded","radius","coverage","colorDomain","colorRange","getColorWeight","d","Math","round","colorAggregation","elevationScale","getPosition","coordinates","elevationAggregation","getElevationWeight","controller","mapboxApiAccessToken","COLORS","MapPage","numberOfDatasets","length","state","selectedDataset","intervalId","undefined","playing","prepareDataset","bind","prevDataset","nextDataset","onPlay","onPause","getLegend","document","addEventListener","key","setState","setInterval","clearInterval","timeLabel","toString","currentYear","currentMonth","console","log","maxValue","units","colorBlock","COLOR","index","lowerBoundary","upperBoundary","legendLine","style","backgroundColor","legendLineLabel","clsx","legend","cardContent","legendMonth","zIndex","width","borderRadius","overflow","padding","textShadow","paddingTop","paddingRight","paddingBottom","paddingLeft","margin","App","0","1","year","month","mapView","selectionValid","errorMessageVisible","errorMessageText","handleSelect","handleFetch","newSelection","assign","params","from_month","to_month","from_year","to_year","url","Promise","resolve","reject","xmlhttp","window","XMLHttpRequest","onreadystatechange","readyState","status","responseText","query_string","open","send","JSON","stringify","BackendGET","then","resolveMessage","resolveJSON","parse","catch","rejectMessage","rejectJSON","Snackbar","snackbar","anchorOrigin","vertical","horizontal","SnackbarContent","snackbarContentError","aria-describedby","message","palette","primary","main","createMuiTheme","secondary","Boolean","location","hostname","match","ReactDOM","render","ThemeProvider","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"js/main.152161a0.chunk.js","sourcesContent":["\nexport function BackendGET(url, params) {\n\n\treturn new Promise((resolve, reject) => {\n\n\t\tlet xmlhttp;\n\n\t\tif (window.XMLHttpRequest) {\n\t\t\t// code for modern browsers\n\t\t\txmlhttp = new XMLHttpRequest();\n\n\t\t\txmlhttp.onreadystatechange = function () {\n\n\t\t\t\t/*\n\t\t\t\thttps://www.w3schools.com/xml/ajax_xmlhttprequest_response.asp\n\t\t\t\thttps://malcoded.com/posts/react-http-requests-axios/\n\t\t\t\t*/\n\n\t\t\t\t/*\n\t\t\t\tthis.readyState = 0: request not initialized\n\t\t\t\t\t\t\t\t  1: server connection established\n\t\t\t\t\t\t\t\t  2: request received\n\t\t\t\t\t\t\t\t  3: processing request\n\t\t\t\t\t\t\t\t  4: request finished and response is ready\n\t\t\t\t*/\n\n\t\t\t\tif (this.readyState === 4) {\n\t\t\t\t\tif (this.status === 200) {\n\t\t\t\t\t\tresolve(this.responseText);\n\t\t\t\t\t} else {\n\t\t\t\t\t\treject(this.responseText);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t};\n\n\t\t\tlet query_string = \"?\";\n\n\t\t\tfor (let key in params) {\n\t\t\t\t// noinspection JSUnfilteredForInLoop\n\t\t\t\tif (params[key] !== null) {\n\t\t\t\t\t\t// noinspection JSUnfilteredForInLoop\n\t\t\t\t\t\tquery_string += key + \"=\" + params[key].toString();\n\t\t\t\t\t}\n\t\t\t\tquery_string += \"&\";\n\t\t\t}\n\n\t\t\tconsole.log(query_string);\n\n\t\t\txmlhttp.open(\"GET\", url + query_string, true);\n\t\t\t// xmlhttp.send(JSON.stringify(params))\n\t\t\txmlhttp.send(JSON.stringify(params))\n\n\t\t}\n\n\t});\n\n}\n\nexport const BACKEND_URL = \"https://science-hack-2019.herokuapp.com/backend/collection\";\n// export const BACKEND_URL = \"http://127.0.0.1:5000/backend/collection\";","\n/* General Imports --------------------------------------------------------------- */\nimport React from \"react\";\n\n\n/* Material UI Imports ----------------------------------------------------------- */\nimport {\n\tFormControl,\n\tInputLabel,\n\tSelect,\n\tMenuItem} from \"@material-ui/core\";\n\n\n/* Component --------------------------------------------------------------------- */\n\n\nexport const CustomSelect = (props) => {\n\n\t/*\n\n\tREQUIRED props:\n\t* label (label of the select box)\n\t* value (initial value)\n\t* selectOptions (JS Object storing all possible values as keys\n\t\t\t\t\t and their labels as the respective values)\n\n\tOPTIONAL props:\n\t* onChange (function that takes in the value of the select after changing it)\n\t* className (actual classname strings)\n\n\t*/\n\n\tconst [value, setValue] = React.useState(props.value);\n\n\tconst handleChange = (event) => {\n\t\tsetValue(event.target.value);\n\t\tif (\"onChange\" in props) {\n\t\t\tprops.onChange(parseInt(event.target.value));\n\t\t}\n\t};\n\n\treturn (\n\t\t<FormControl className={\"className\" in props ? props[\"className\"] : \"\"}>\n\t\t\t<InputLabel id=\"select-label\">{props.label}</InputLabel>\n\t\t\t<Select\n\t\t\t\tlabelId=\"select-label\"\n\t\t\t\tid=\"demo-simple-select\"\n\t\t\t\tvalue={value}\n\t\t\t\tonChange={handleChange}>\n\t\t\t\t{Object.keys(props.selectOptions).map(value => (\n\t\t\t\t\t<MenuItem value={value}>{props.selectOptions[value]}</MenuItem>\n\t\t\t\t))}\n\t\t\t</Select>\n\t\t</FormControl>\n\t);\n};\n","\n/* General Imports --------------------------------------------------------------- */\nimport React from 'react';\nimport './SelectPage.scss'\n\n\n/* Material UI Import ------------------------------------------------------------ */\nimport {\n\tContainer,\n\tTypography,\n\tCard,\n\tCardContent,\n\tGrid,\n\tButton,\n\tCircularProgress} from '@material-ui/core';\n\n\n/* Hook Linking Imports ---------------------------------------------------------- */\nimport PropTypes from \"prop-types\";\nimport withStyles from \"@material-ui/styles/withStyles/withStyles\";\n\n\n/* Component Imports ------------------------------------------------------------- */\nimport {CustomSelect} from \"../Components/Forms/CustomSelect\";\n\n\n/* Styles ------------------------------------------------------------------------ */\n\n\nconst styles = theme => ({\n\tcontainer: {\n\t},\n\theadline: {\n\t\tdisplay: \"block\",\n\t\ttextAlign: \"center\",\n\t\tmarginBottom: theme.spacing(3)\n\t},\n\tgridItem: {\n\t\tdisplay: \"flex\",\n\t\talignItems: \"center\",\n\t\tjustifyContent: \"center\",\n\t},\n\tselectDataset: {\n\t\tminWidth: 200,\n\t\ttextAlign: \"center\"\n\t},\n\tselectTime: {\n\t\tminWidth: 100,\n\t\tmarginLeft: theme.spacing(4),\n\t\tmarginRight: theme.spacing(4),\n\t\ttextAlign: \"center\"\n\t},\n\tbutton: {\n\t\tcolor: \"white\",\n\t\tfontWeight: \"500\",\n\t},\n\twrapper: {\n\t\tmarginLeft: theme.spacing(0.5),\n\t\tmarginRight: theme.spacing(0.5),\n\t\tposition: 'relative',\n\t},\n\tbuttonProgress: {\n\t\tposition: 'absolute',\n\t\ttop: '50%',\n\t\tleft: '50%',\n\t\tmarginTop: -12,\n\t\tmarginLeft: -12,\n\t},\n});\n\n\n/* Component --------------------------------------------------------------------- */\n\n\nclass SelectPage extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t}\n\n\trender() {\n\n\t\tconst {classes} = this.props;\n\t\tlet yearSelectOptions;\n\t\tlet monthSelectOptions = this.props.selectOptions.months;\n\t\tif (this.props.selectOptions.dataset[this.props.selection.dataset] === \"Odiac\") {\n\t\t\tyearSelectOptions = this.props.selectOptions.odiacYears;\n\t\t} else {\n\t\t\tyearSelectOptions = this.props.selectOptions.edgarYears;\n\t\t}\n\n\t\treturn (\n\t\t\t<div className=\"SelectPage\">\n\t\t\t\t<Container maxWidth=\"xs\" className={classes.container}>\n\t\t\t\t\t<Card className={classes.card} elevation={3}>\n\t\t\t\t\t\t<CardContent>\n\t\t\t\t\t\t\t<Typography variant=\"h5\" className={classes.headline}>Configure Visualisation</Typography>\n\t\t\t\t\t\t\t<Grid container className={classes.root} spacing={4} justify=\"center\">\n\t\t\t\t\t\t\t\t<Grid item xs={12} className={classes.gridItem}>\n\t\t\t\t\t\t\t\t\t<CustomSelect className={classes.selectDataset}\n\t\t\t\t\t\t\t\t\t              label=\"Dataset\"\n\t\t\t\t\t\t\t\t\t              value={this.props.selection.dataset}\n\t\t\t\t\t\t\t\t\t              selectOptions={this.props.selectOptions.dataset}\n\t\t\t\t\t\t\t\t\t              onChange={value => this.props.onChange({dataset: value})}/>\n\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t\t<Grid item xs={12} className={classes.gridItem}>\n\t\t\t\t\t\t\t\t\t<CustomSelect className={classes.selectTime}\n\t\t\t\t\t\t\t\t\t              label=\"From Month\"\n\t\t\t\t\t\t\t\t\t              value={this.props.selection.fromMonth}\n\t\t\t\t\t\t\t\t\t              selectOptions={monthSelectOptions}\n\t\t\t\t\t\t\t\t\t              onChange={value => this.props.onChange({fromMonth: value})}/>\n\t\t\t\t\t\t\t\t\t<CustomSelect className={classes.selectTime}\n\t\t\t\t\t\t\t\t\t              label=\"To Month\"\n\t\t\t\t\t\t\t\t\t              value={this.props.selection.toMonth}\n\t\t\t\t\t\t\t\t\t              selectOptions={monthSelectOptions}\n\t\t\t\t\t\t\t\t\t              onChange={value => this.props.onChange({toMonth: value})}/>\n\t\t\t\t\t\t\t\t</Grid>\n\n\t\t\t\t\t\t\t\t<Grid item xs={12} className={classes.gridItem}>\n\t\t\t\t\t\t\t\t\t<CustomSelect className={classes.selectTime}\n\t\t\t\t\t\t\t\t\t              label=\"From Year\"\n\t\t\t\t\t\t\t\t\t              value={this.props.selection.fromYear}\n\t\t\t\t\t\t\t\t\t              selectOptions={yearSelectOptions}\n\t\t\t\t\t\t\t\t\t              onChange={value => this.props.onChange({fromYear: value})}/>\n\t\t\t\t\t\t\t\t\t<CustomSelect className={classes.selectTime}\n\t\t\t\t\t\t\t\t\t              label=\"To Year\"\n\t\t\t\t\t\t\t\t\t              value={this.props.selection.toYear}\n\t\t\t\t\t\t\t\t\t              selectOptions={yearSelectOptions}\n\t\t\t\t\t\t\t\t\t              onChange={value => this.props.onChange({toYear: value})}/>\n\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t\t<Grid item xs={12} className={classes.gridItem}>\n\t\t\t\t\t\t\t\t\t<div className=\"ButtonBox\">\n\t\t\t\t\t\t\t\t\t\t<div className={classes.wrapper}>\n\t\t\t\t\t\t\t\t\t\t\t<Button variant=\"contained\"\n\t\t\t\t\t\t\t\t\t\t\t        color={this.props.fetching ? \"default\" : \"secondary\"}\n\t\t\t\t\t\t\t\t\t\t\t        onClick={this.props.onFetch}\n\t\t\t\t\t\t\t\t\t\t\t        className={classes.button}>Fetch Data</Button>\n\t\t\t\t\t\t\t\t\t\t\t{this.props.fetching && (\n\t\t\t\t\t\t\t\t\t\t\t\t<CircularProgress size={24}\n\t\t\t\t\t\t\t\t\t\t\t\t                  className={classes.buttonProgress}\n\t\t\t\t\t\t\t\t\t\t\t\t                  color=\"secondary\"/>\n\t\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t</CardContent>\n\t\t\t\t\t</Card>\n\t\t\t\t</Container>\n\t\t\t</div>\n\t\t);\n\t}\n\n}\n\n\n/* Hook Linking & Export --------------------------------------------------------- */\n\n\nSelectPage.propTypes = {\n\tclasses: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(SelectPage);\n","/// app.js\nimport React from 'react';\nimport DeckGL from '@deck.gl/react';\nimport {LineLayer} from '@deck.gl/layers';\nimport {StaticMap} from 'react-map-gl';\nimport {HexagonLayer} from '@deck.gl/aggregation-layers';\n\n// Set your mapbox access token here\nimport {MAPBOX_ACCESS_TOKEN} from '../../secrets';\n\n// Initial viewport settings\nconst initialViewState = {\n\tlongitude: 11.576124,\n\tlatitude: 48.137154,\n\tzoom: 5,\n\tpitch: 30,\n\tbearing: 0\n};\n\n// Data to be used by the LineLayer\nconst data = [{sourcePosition: [-122.41669, 37.7853], targetPosition: [-122.41669, 37.781]}];\n\nexport class Map extends React.Component {\n\trender() {\n\n\t\tconst hexLayer = new HexagonLayer({\n\t\t\tid: 'hexagon-layer',\n\t\t\tdata: this.props.dataset,\n\t\t\tpickable: false,\n\t\t\textruded: true,\n\t\t\tradius: 50000,\n\t\t\tcoverage: 0.6,\n\n\t\t\tcolorDomain: [0.0, 5.0],\n\t\t\tcolorRange: [\n\t\t\t\t[13, 8, 135],\n\t\t\t\t[62, 4, 156],\n\t\t\t\t[99, 0, 167],\n\t\t\t\t[135, 7, 166],\n\t\t\t\t[166, 32, 152],\n\t\t\t\t[192, 58, 131],\n\t\t\t\t[213, 84, 110],\n\t\t\t\t[231, 111, 90],\n\t\t\t\t[245, 140, 70],\n\t\t\t\t[253, 173, 50],\n\t\t\t\t[252, 210, 37],\n\t\t\t\t[240, 249, 33]\n\t\t\t],\n\t\t\tgetColorWeight: d => Math.round(d.value * 5),\n\t\t\tcolorAggregation: \"MEAN\",\n\n\t\t\televationScale: 3000,\n\t\t\tgetPosition: d => [d.coordinates[1], d.coordinates[0]],\n\t\t\televationAggregation: \"MEAN\",\n\t\t\tgetElevationWeight: d => d.value,\n\t\t});\n\n\t\tconst layers = [hexLayer];\n\n\t\treturn (\n\t\t\t<DeckGL\n\t\t\t\tinitialViewState={initialViewState}\n\t\t\t\tcontroller={true}\n\t\t\t\tlayers={layers}\n\t\t\t>\n\t\t\t\t<StaticMap mapboxApiAccessToken={MAPBOX_ACCESS_TOKEN}/>\n\t\t\t</DeckGL>\n\t\t);\n\t}\n}","\nexport const MAPBOX_ACCESS_TOKEN = \"pk.eyJ1IjoiZG9zdHVmZnRoYXRtYXR0ZXJzIiwiYSI6ImNrM3ZobXh5OTBtbmgzZWxrdTN3OXhva20ifQ.HoHL_qBYSvUwvvmggn0HSw\";\n","/* General Imports --------------------------------------------------------------- */\nimport React from 'react';\nimport clsx from 'clsx';\n\n/* Hook Linking Imports ----------------------------------------------------------*/\nimport PropTypes from \"prop-types\";\nimport withStyles from \"@material-ui/styles/withStyles/withStyles\";\n\n\n/* Component Imports ------------------------------------------------------------- */\nimport {Map} from './Map';\nimport {Card, CardContent, Typography} from \"@material-ui/core\";\n\n\n/* Styles ------------------------------------------------------------------------ */\n\nconst COLORS = [\n\t\"#0D0887\",\n\t\"#3E049C\",\n\t\"#6300A7\",\n\t\"#8707A6\",\n\t\"#A62098\",\n\t\"#C03A83\",\n\t\"#D5546E\",\n\t\"#E76F5A\",\n\t\"#F58C46\",\n\t\"#FDAD32\",\n\t\"#FCD225\",\n\t\"#F0F921\",\n];\n\nconst styles = theme => ({\n\theadline: {\n\t\tdisplay: \"block\",\n\t\ttextAlign: \"center\",\n\t\tmarginBottom: theme.spacing(4)\n\t},\n\tcard: {\n\t\tposition: \"absolute\",\n\t\ttop: theme.spacing(2),\n\t\tleft: theme.spacing(2),\n\t\tzIndex: \"1000\",\n\t},\n\tlegendMonth: {\n\t\ttextAlign: \"center\",\n\t\tmarginBottom: theme.spacing(1),\n\t},\n\tlegend: {\n\t\twidth: 200,\n\t},\n\tlegendLine: {\n\t\tdisplay: \"block\",\n\t\twidth: 200,\n\t\tborderRadius: 3,\n\t\toverflow: \"hidden\",\n\t\ttextAlign: \"center\",\n\t\tmarginBottom: theme.spacing(0.5),\n\t\t\"&:last-child\": {\n\t\t\tmarginBottom: theme.spacing(0),\n\t\t}\n\t},\n\tlegendLineLabel: {\n\t\tdisplay: \"inline-block\",\n\t\tpadding: theme.spacing(1),\n\t\tcolor: \"rgb(255, 255, 255)\",\n\t\tfontWeight: \"500\",\n\t\ttextShadow: \"0 0 1.5px rgb(0,0,0)\",\n\t},\n\tcardContent: {\n\t\tpaddingTop: theme.spacing(2),\n\t\tpaddingRight: theme.spacing(2),\n\t\tpaddingBottom: theme.spacing(1),\n\t\tpaddingLeft: theme.spacing(2),\n\t\tmargin: 0,\n\t\t\"&:last-child\": {\n\t\t\tpaddingBottom: theme.spacing(2),\n\t\t}\n\t},\n});\n\n\n/* Component --------------------------------------------------------------------- */\n\n\nclass MapPage extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\tthis.numberOfDatasets = this.props.data.length;\n\t\tthis.state = {\n\t\t\tselectedDataset: 0,\n\t\t\tintervalId: undefined,\n\t\t\tplaying: false\n\t\t};\n\n\t\tthis.prepareDataset = this.prepareDataset.bind(this);\n\t\tthis.prevDataset = this.prevDataset.bind(this);\n\t\tthis.nextDataset = this.nextDataset.bind(this);\n\n\t\tthis.onPlay = this.onPlay.bind(this);\n\t\tthis.onPause = this.onPause.bind(this);\n\n\t\tthis.getLegend = this.getLegend.bind(this);\n\n\t\tdocument.addEventListener('keypress', event => {\n\t\t\tif (event.key === \"d\") {\n\t\t\t\tthis.onPause();\n\t\t\t\tthis.nextDataset();\n\n\t\t\t} else if (event.key === \"a\") {\n\t\t\t\tthis.onPause();\n\t\t\t\tthis.prevDataset();\n\n\t\t\t} else if (event.key === \" \") {\n\t\t\t\tif (this.state.playing) {\n\t\t\t\t\tthis.onPause();\n\t\t\t\t} else {\n\t\t\t\t\tthis.onPlay();\n\t\t\t\t}\n\n\t\t\t}\n\t\t});\n\t}\n\n\tprepareDataset() {\n\t\treturn this.props.data[this.state.selectedDataset];\n\t}\n\n\tprevDataset() {\n\t\tthis.setState({\n\t\t\tselectedDataset: (this.state.selectedDataset - 1 + this.numberOfDatasets) % this.numberOfDatasets,\n\t\t});\n\t}\n\n\tnextDataset() {\n\t\tthis.setState({\n\t\t\tselectedDataset: (this.state.selectedDataset + 1) % this.numberOfDatasets,\n\t\t});\n\t}\n\n\tonPlay() {\n\t\tlet intervalId = setInterval(this.nextDataset, 500);\n\t\tthis.setState({\n\t\t\tintervalId: intervalId,\n\t\t\tplaying: true,\n\t\t});\n\t}\n\n\tonPause() {\n\t\tclearInterval(this.state.intervalId);\n\t\tthis.setState({\n\t\t\tintervalId: undefined,\n\t\t\tplaying: false,\n\t\t});\n\t}\n\n\tgetLegend() {\n\t\tconst {classes} = this.props;\n\n\t\tlet timeLabel;\n\n\t\tif (this.props.selection.dataset === 0) {\n\t\t\t// edgar (only years)\n\t\t\tlet currentYear = this.props.selection.fromYear + this.state.selectedDataset;\n\t\t\ttimeLabel = currentYear.toString();\n\t\t} else {\n\t\t\t// odiac (month and year)\n\t\t\tlet currentYear = this.props.selection.fromYear + Math.round(((this.props.selection.fromMonth + this.state.selectedDataset)/12) - 0.5001);\n\t\t\tlet currentMonth = ((this.props.selection.fromMonth + this.state.selectedDataset - 1) % 12) + 1;\n\t\t\tconsole.log(this.props.selection.fromYear, this.props.selection.fromMonth, currentYear, currentMonth);\n\t\t\ttimeLabel = currentMonth.toString() + \"/\" + currentYear.toString();\n\t\t}\n\n\t\tconst maxValue = this.props.units[this.state.selectedDataset];\n\t\tconst unit = \"µg/(m2*s)\";\n\n\t\tlet colorBlock = COLORS.map((COLOR, index) => {\n\t\t\tconst lowerBoundary = Math.round((maxValue/12.0)*index, 3);\n\t\t\tconst upperBoundary = Math.round((maxValue/12.0)*(index + 1), 3);\n\t\t\treturn (\n\t\t\t\t<div className={classes.legendLine} style={{backgroundColor: COLOR}}>\n\t\t\t\t\t\t<p className={classes.legendLineLabel}>{lowerBoundary} - {upperBoundary} {unit}</p>\n\t\t\t\t\t</div>\n\t\t\t);\n\t\t});\n\n\t\treturn (\n\t\t\t<Card className={classes.card} elevation={3}>\n\t\t\t\t<CardContent className={clsx(classes.legend, classes.cardContent)}>\n\t\t\t\t\t<Typography variant=\"h5\" className={classes.legendMonth}>{timeLabel}</Typography>\n\t\t\t\t\t{colorBlock}\n\t\t\t\t</CardContent>\n\t\t\t</Card>\n\t\t);\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<div className=\"MapPage\">\n\t\t\t\t{this.getLegend()}\n\t\t\t\t<Map dataset={this.prepareDataset()}/>\n\t\t\t</div>\n\t\t);\n\t}\n\n}\n\n\n/* Hook Linking & Export --------------------------------------------------------- */\n\n\nMapPage.propTypes = {\n\tclasses: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(MapPage);\n","/* Material UI Import ------------------------------------------------------------ */\nimport React from 'react';\n\n\n/* Ajax Import ------------------------------------------------------------------- */\nimport {BackendGET, BACKEND_URL} from \"./backendCommunication\";\n\n\n/* Material UI Import ------------------------------------------------------------ */\nimport {\n\tSnackbar,\n\tSnackbarContent\n} from '@material-ui/core';\n\n/* Hook Linking Imports ---------------------------------------------------------- */\nimport PropTypes from \"prop-types\";\nimport withStyles from \"@material-ui/styles/withStyles/withStyles\";\n\n\nimport SelectPage from \"./SelectPage/SelectPage\";\nimport MapPage from \"./MapPage/MapPage\";\n\nconst styles = theme => ({\n\tsnackbar: {\n\t\tmargin: theme.spacing(1)\n\t},\n\tsnackbarContentError: {\n\t\tbackgroundColor: theme.palette.primary.main,\n\t},\n});\n\n\nclass App extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\tthis.selectOptions = {\n\t\t\tdataset: {\n\t\t\t\t0: \"Edgar\",\n\t\t\t\t1: \"Odiac\"\n\t\t\t},\n\t\t\tedgarYears: {},\n\t\t\todiacYears: {},\n\t\t\tmonths: {},\n\t\t};\n\n\t\tfor (let year = 1970; year <= 2018; year++) {\n\t\t\tthis.selectOptions.edgarYears[year] = year;\n\t\t}\n\n\t\tfor (let year = 2000; year <= 2017; year++) {\n\t\t\tthis.selectOptions.odiacYears[year] = year;\n\t\t}\n\n\t\tfor (let month = 1; month <= 12; month++) {\n\t\t\tthis.selectOptions.months[month] = month;\n\t\t}\n\n\t\tthis.state = {\n\t\t\tmapView: false,\n\t\t\tfetching: false,\n\n\t\t\tdata: [],\n\t\t\tunits: [],\n\n\t\t\tselection: {\n\t\t\t\tdataset: 1,\n\t\t\t\tfromMonth: 1,\n\t\t\t\tfromYear: 2016,\n\t\t\t\ttoMonth: 12,\n\t\t\t\ttoYear: 2016\n\t\t\t},\n\n\t\t\tselectionValid: true,\n\n\t\t\terrorMessageVisible: false,\n\t\t\terrorMessageText: \"\",\n\t\t};\n\n\t\tthis.handleSelect = this.handleSelect.bind(this);\n\t\tthis.handleFetch = this.handleFetch.bind(this);\n\t}\n\n\thandleSelect(newSelection) {\n\t\tlet selection = this.state.selection;\n\t\tObject.assign(selection, newSelection);\n\n\t\tif (this.state.selection.fromYear > this.state.selection.toYear) {\n\t\t\tthis.setState({\n\t\t\t\tselection: selection,\n\t\t\t\tselectionValid: false,\n\t\t\t\terrorMessageVisible: true,\n\t\t\t\terrorMessageText: \"Requirement: From Year <= To Year\",\n\t\t\t});\n\t\t\treturn;\n\t\t} else if (this.state.selection.fromYear === this.state.selection.toYear) {\n\t\t\tif (this.state.selection.fromMonth > this.state.selection.toMonth) {\n\t\t\t\tthis.setState({\n\t\t\t\t\tselection: selection,\n\t\t\t\t\tselectionValid: false,\n\t\t\t\t\terrorMessageVisible: true,\n\t\t\t\t\terrorMessageText: \"Requirement: From Month <= To Month\",\n\t\t\t\t});\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\n\t\tthis.setState({\n\t\t\tselection: selection,\n\t\t\tselectionValid: true,\n\t\t\terrorMessageVisible: false,\n\t\t\terrorMessageText: \"\",\n\t\t});\n\t}\n\n\thandleFetch() {\n\t\tif (this.state.selectionValid) {\n\t\t\tthis.setState({fetching: true});\n\n\t\t\tconst params = {\n\t\t\t\tdataset: this.selectOptions.dataset[this.state.selection.dataset],\n\t\t\t\tfrom_month: this.state.selection.fromMonth,\n\t\t\t\tto_month: this.state.selection.toMonth,\n\t\t\t\tfrom_year: this.state.selection.fromYear,\n\t\t\t\tto_year: this.state.selection.toYear,\n\t\t\t};\n\n\t\t\tconsole.log({\n\t\t\t\turl: BACKEND_URL,\n\t\t\t\tparams: params,\n\t\t\t});\n\n\t\t\tBackendGET(BACKEND_URL, params).then((resolveMessage) => {\n\t\t\t\tconst resolveJSON = JSON.parse(resolveMessage);\n\t\t\t\tthis.setState({\n\t\t\t\t\tfetching: false,\n\t\t\t\t\tmapView: true,\n\t\t\t\t\tdata: resolveJSON[\"Datasets\"],\n\t\t\t\t\tunits: resolveJSON[\"Maximum\"],\n\t\t\t\t});\n\t\t\t}).catch((rejectMessage) => {\n\t\t\t\tconsole.log(rejectMessage);\n\t\t\t\tconst rejectJSON = JSON.parse(JSON.stringify(rejectMessage));\n\t\t\t\tthis.setState({\n\t\t\t\t\tfetching: false,\n\t\t\t\t\terrorMessageVisible: true,\n\t\t\t\t\terrorMessageText: rejectJSON[\"Status\"],\n\t\t\t\t});\n\t\t\t});\n\t\t}\n\t}\n\n\trender() {\n\n\t\tconst {classes} = this.props;\n\n\t\treturn (\n\t\t\t<div className=\"App\">\n\t\t\t\t{(!this.state.mapView || this.state.errorMessageVisible) && (\n\t\t\t\t\t<SelectPage selection={this.state.selection}\n\t\t\t\t\t            selectOptions={this.selectOptions}\n\t\t\t\t\t            onChange={this.handleSelect}\n\t\t\t\t\t            onFetch={this.handleFetch}\n\t\t\t\t\t            fetching={this.state.fetching}/>)}\n\t\t\t\t{(this.state.mapView && !this.state.errorMessageVisible) && (<MapPage data={this.state.data} units={this.state.units} selection={this.state.selection}/>)}\n\t\t\t\t{this.state.errorMessageVisible && (\n\t\t\t\t\t<Snackbar className={classes.snackbar}\n\t\t\t\t\t          open={true}\n\t\t\t\t\t          anchorOrigin={{vertical: 'bottom', horizontal: 'center'}}>\n\t\t\t\t\t\t<SnackbarContent\n\t\t\t\t\t\t\tclassName={classes.snackbarContentError}\n\t\t\t\t\t\t\taria-describedby=\"message-id\"\n\t\t\t\t\t\t\tmessage={<span id=\"message-id\">{this.state.errorMessageText}</span>}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</Snackbar>\n\t\t\t\t)}\n\t\t\t</div>\n\t\t);\n\t}\n\n}\n\nApp.propTypes = {\n\tclasses: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(App);\n","/* General Imports --------------------------------------------------------------- */\nimport React from 'react';\n\n\n/* Styling Imports --------------------------------------------------------------- */\nimport {createMuiTheme} from \"@material-ui/core\";\nimport {ThemeProvider} from \"@material-ui/styles\";\nimport {BreakpointProvider} from 'react-socks';\n\n\n/* Component Imports ------------------------------------------------------------- */\nimport App from './App';\n\n\n/* Theme ------------------------------------------------------------------------- */\n\n\nconst theme = createMuiTheme({\n\tpalette : {\n\t\tprimary: {\n\t\t\tmain: '#282c34'\n\t\t},\n\t\tsecondary: {\n\t\t\tmain: 'hsl(340, 100%, 50%)'\n\t\t},\n\t}\n});\n\n\n/* Component --------------------------------------------------------------------- */\n\n\nexport const Wrapper = () => {\n\treturn (\n\t\t<ThemeProvider theme={theme}>\n\t\t\t<BreakpointProvider>\n\t\t\t\t<App/>\n\t\t\t</BreakpointProvider>\n\t\t</ThemeProvider>\n\t);\n};\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport {Wrapper} from './App/Wrapper';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<Wrapper/>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}